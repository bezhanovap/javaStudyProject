package com.avenue.java.spb.group2;

public class SecondExample {
    public static void main(String[] args) {
        /**Арифметические операторы
         +  Складывает значения по обе стороны от оператора
         -  Вычитает правый операнд из левого операнда
         *  Умножает значения по обе стороны от оператора
         /  Оператор деления делит левый операнд на правый операнд
         %  Делит левый операнд на правый операнд и возвращает остаток
         ++  Инкремент - увеличивает значение операнда на 1 х++ постфиксная, ++х префиксная
         --  Декремент - уменьшает значение операнда на 1  х-- постфиксная, --х префиксная*/

        /**Операторы сравнения

         ==  Проверяет, равны или нет значения двух операндов, если да,
         то условие становится истинным  (A == B) – не верны

         !=  Проверяет, равны или нет значения двух операндов,
         если значения не равны, то условие становится истинным  (A != B) – значение истинна

         >  Проверяет, является ли значение левого операнда больше,
         чем значение правого операнда, если да, то условие становится истинным  (A > B) – не верны

         <  Проверяет, является ли значение левого операнда меньше,
         чем значение правого операнда, если да, то условие становится истинным  (A < B) – значение истинна

         >=  Проверяет, является ли значение левого операнда больше или равно значению правого операнда,
         если да, то условие становится истинным  (A >= B) – значение не верны

         <=  Проверяет, если значение левого операнда меньше или равно значению правого операнда,
         если да, то условие становится истинным  (A <= B) – значение истинна*/

        /** Логические операторы
         &&  Называется логический оператор «И». Если оба операнда являются не равны нулю, то условие становится истинным
         ||  Называется логический оператор «ИЛИ». Если любой из двух операндов не равен нулю, то условие становится истинным
         !  Называется логический оператор «НЕ». Использование меняет логическое состояние своего операнда.
         Если условие имеет значение true, то оператор логического «НЕ» будет делать false*/

        /** if else if

         if (условие) {
         //действие(-я), которые выполняются, если условие истинно;
         }
         else if (условие) {
         //действие(-я), которые выполняются, если условие истинно;
         }
         else if (условие) {
         //действие(-я), которые выполняются, если условие истинно;
         }
         else {
         //действие(-я), которые выполняются, если условие истинно;
         }

         */

        /** switch case

         switch (ВыражениеДляВыбора) {
         case  (Значение1):
         Код1;
         break;
         case (Значение2):
         Код2;
         break;
         ...
         case (ЗначениеN):
         КодN;
         break;
         default:
         КодВыбораПоУмолчанию;
         break;
         }
         */

        //Task1
        /*1 Написать программу, чтобы она:
        - выводил на экран строку "Число меньше 5", если число, которое мы ей подадим меньше 5,
                - выводил строку "Число больше 5", если число, которое мы ей подадим больше 5,
                - выводил строку "Число равно 5", если число, которое мы ей подадим равен 5.*/

        //Task2
        /*2 Напиши программу. которая будет проверять попало ли целое число, которое мы ей подадим
        в интервал от 50 до 100 и сообщить результат на экран в следующем виде:
        "Число number не содержится в интервале." или "Число number содержится в интервале.", где number - число, которое мы ей подадим.


                Пример для числа 112:
        Число 112 не содержится в интервале.

        Пример для числа 60:
        Число 60 содержится в интервале.*/

        //Task3
        /*3 Напиши программу, которая по номеру месяца должна определить время года (зима, весна, лето, осень) и вывести на экран.

        Пример для номера месяца 2:
        зима

        Пример для номера месяца 5:
        весна*/

        //Task4
        /*4
        Написать программу, которая будет проверять число, которое мы подадим ей.
                Если число положительное, то увеличить его в два раза.
                Если число отрицательное, то прибавить единицу.
        Если введенное число равно нулю, необходимо вывести ноль.
        Вывести результат в консоль.*/

        //Task5
        /*5
        Написать программу, которая, в зависимости от того числа, которое мы ей подадим выведет название дня недели.
        "понедельник", "вторник", "среда", "четверг", "пятница", "суббота", "воскресенье",
                если введен номер больше 7 или меньше 1 - вывести "такого дня недели не существует".

                Пример для номера 5:
        пятница

        Пример для номера 10:
        такого дня недели не существует*/

        //Task6
        /*6
        Написать программу, которая, в зависимости от того числа, которое мы ей подадим (год)
                , будет определять количество дней в году. Результат вывести на экран в следующем виде:
        количество дней в этом году: x
                , где
        х - 366 для високосного года,
                х - 365 для обычного года.

                Подсказка:
        В високосном году - 366 дней, тогда как в обычном - 365.
        1) если год делится без остатка на 400 это високосный год;
        2) в оставшихся годах после этого, если год делится без остатка на 100, то это обычный год;
        3) в оставшихся годах после этого, если год делится без остатка на 4, то это високосный год;
        4) все оставшиеся года невисокосные.
        Так, годы 1700, 1800 и 1900 не являются високосными, так как они кратны 100 и не кратны 400.
        Годы 1600 и 2000 - високосные, так как они кратны 100 и кратны 400.
        Годы 2100, 2200 и 2300 - не високосные.*/

        //Task7
        /*7
        Объявить три переменных (a, b, c) - стороны предполагаемого треугольника.
        Определить возможность существования треугольника по сторонам.
        Результат вывести на экран в следующем виде:
        "Треугольник существует." - если треугольник с такими сторонами существует.
        "Треугольник не существует." - если треугольник с такими сторонами не существует.

        Подсказка:
        Треугольник существует только тогда, когда сумма двух его сторон больше третьей.
        Требуется сравнить каждую сторону с суммой двух других.
        Если хотя бы в одном случае сторона окажется больше либо равна сумме двух других, то треугольника с такими сторонами не существует.*/

        //Task8
        /*8
        Работа светофора для пешеходов запрограммирована следующим образом:
        в начале каждого часа в течение трех минут горит зелёный сигнал,
                затем в течение одной минуты - жёлтый,
                а потом в течение одной минуты - красный,
                затем опять зелёный горит три минуты и т. д.
                Подать программе вещественное число t, означающее время в минутах, прошедшее с начала очередного часа.
        Определить, сигнал какого цвета горит для пешеходов в этот момент.
        Результат вывести на экран в следующем виде:
        "зелёный" - если горит зелёный цвет,
                "жёлтый" - если горит жёлтый цвет,
                "красный" - если горит красный цвет.

                Пример для числа 2.5:
        зелёный

        Пример для числа 3:
        жёлтый

        Пример для числа 4:
        красный

        Пример для числа 5:
        зелёный*/



    }

}
